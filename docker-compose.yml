version: "3.9"

x-common-env: &common-env
  environment:
    - DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}
    - RABBITMQ_HOST=rabbitmq
    - RABBITMQ_PORT=5672
    - RABBITMQ_QUEUE_API2INF=api_to_inference
    - RABBITMQ_QUEUE_INF2API=inference_to_api
    - RABBITMQ_LOGS="-"
    - RABBITMQ_LOG_LEVEL=info
    - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
    - RABBITMQ_DEFAULT_PASSWORD=${RABBITMQ_DEFAULT_PASSWORD}

    - INFERENCE_PROCESS_BATCH_SIZE=50
    
    - MINIO_ENDPOINT=minioserver:9000
    - MINIO_BUCKET=mediae
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - MINIO_ROOT_USER=${MINIO_ROOT_USER}
    - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_HOST=${POSTGRES_HOST}
    - POSTGRES_PORT=${POSTGRES_PORT}
    - POSTGRES_DB=${POSTGRES_DB}
    - MH_LOG_LEVEL=error

services:
  api:
    <<: *common-env
    image: ${DOCKERHUB_USERNAME}/bird-sound-classif:api
    ports:
      - "8001:8000"
    depends_on:
      - rabbitmq
      - minioserver
    networks:
      - internal
      - external_network
    command: sh -c "sleep 5 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    restart: always

  inference:
    <<: *common-env
    image: ${DOCKERHUB_USERNAME}/bird-sound-classif:inference
    depends_on:
      - rabbitmq
      - minioserver
    networks:
      - internal
    command: sh -c "sleep 5 && python3 inference/worker.py"
    restart: always

  postgres:
    <<: *common-env
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    <<: *common-env
    image: rabbitmq:3.9.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - internal
    restart: always

  minioserver:
    <<: *common-env
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    container_name: minio
    command: server /data --console-address ":9001"
    volumes:
      - ./docker/minio/minio_entrypoint.sh:/minio_entrypoint.sh
      - minio-data:/data
    networks:
      - internal
    entrypoint: /minio_entrypoint.sh
    restart: always

  mailhog:
    <<: *common-env
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - internal
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    ports:
      - "15051:80"
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_SERVER_MODE: "False"
    networks:
      - internal

volumes:
  minio-data:
  postgres-data:

networks:
  internal:
    driver: bridge
  external_network:
    external: true